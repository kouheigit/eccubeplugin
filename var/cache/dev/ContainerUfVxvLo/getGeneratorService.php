<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'Eccube\Tests\Fixture\Generator' shared service.

if ($lazyLoad) {
    return $this->privates['Eccube\\Tests\\Fixture\\Generator'] = $this->createProxy('Generator_4137487', function () {
        return \Generator_4137487::staticProxyConstructor(function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
            $wrappedInstance = $this->load('getGeneratorService.php', false);

            $proxy->setProxyInitializer(null);

            return true;
        });
    });
}

include_once \dirname(__DIR__, 4).'/tests/Eccube/Tests/Fixture/Generator.php';

return new \Eccube\Tests\Fixture\Generator(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), ($this->privates['Eccube\\Security\\Core\\Encoder\\PasswordEncoder'] ?? $this->getPasswordEncoderService()), ($this->privates['Eccube\\Repository\\MemberRepository'] ?? $this->load('getMemberRepositoryService.php')), ($this->privates['Eccube\\Repository\\CategoryRepository'] ?? $this->load('getCategoryRepositoryService.php')), ($this->privates['Eccube\\Repository\\CustomerRepository'] ?? $this->load('getCustomerRepositoryService.php')), ($this->privates['Eccube\\Repository\\ClassNameRepository'] ?? $this->load('getClassNameRepositoryService.php')), ($this->privates['Eccube\\Repository\\ClassCategoryRepository'] ?? $this->load('getClassCategoryRepositoryService.php')), ($this->privates['Eccube\\Repository\\DeliveryDurationRepository'] ?? $this->load('getDeliveryDurationRepositoryService.php')), ($this->privates['Eccube\\Repository\\DeliveryFeeRepository'] ?? $this->load('getDeliveryFeeRepositoryService.php')), ($this->privates['Eccube\\Repository\\PaymentRepository'] ?? $this->load('getPaymentRepositoryService.php')), ($this->privates['Eccube\\Repository\\PageRepository'] ?? $this->getPageRepositoryService()), ($this->privates['Eccube\\Repository\\Master\\PrefRepository'] ?? $this->load('getPrefRepositoryService.php')), ($this->privates['Eccube\\Repository\\TagRepository'] ?? $this->load('getTagRepositoryService.php')), ($this->privates['Eccube\\Repository\\TaxRuleRepository'] ?? $this->getTaxRuleRepositoryService()), ($this->privates['eccube.purchase.flow.order'] ?? $this->load('getEccube_Purchase_Flow_OrderService.php')), ($this->services['session'] ?? $this->getSessionService()), 'ja_JP');
